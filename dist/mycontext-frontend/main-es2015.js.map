{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/patient/patient-dashboard/patient-dashboard.component.html","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/registration/registration.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/patient/patient-dashboard/patient-dashboard.component.css","webpack:///./src/app/patient/patient-dashboard/patient-dashboard.component.ts","webpack:///./src/app/patient/patient.module.ts","webpack:///./src/app/patient/patient.ts","webpack:///./src/app/patient/patients.service.ts","webpack:///./src/app/user/login/login.component.css","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/registration/registration.component.css","webpack:///./src/app/user/registration/registration.component.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/app/user/user.service.ts","webpack:///./src/app/user/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container align-items-center col-sm-4\\\">\\r\\n    <H1>MyCONTEXT Health</H1>\\r\\n</div>\\r\\n\\r\\n<router-outlet></router-outlet>\"","module.exports = \"<table>\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>ID</th>\\r\\n            <th>Name</th>\\r\\n            <th>Salary</th>\\r\\n            <th>Age</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let employee of employees\\\">\\r\\n            <td>{{employee.id}}</td>\\r\\n            <td>{{employee.employee_name}}</td>\\r\\n            <td>{{employee.employee_salary}}</td>\\r\\n            <td>{{employee.employee_age}}</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\"","module.exports = \"<div class=\\\"container align-items-center col-sm-4\\\">\\r\\n<h2>Login</h2>\\r\\n<br>\\r\\n<form  \\r\\n      [formGroup]=\\\"form\\\"\\r\\n      (ngSubmit)=\\\"onSubmit(form.value)\\\">\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"username\\\"><strong>Username</strong></label>\\r\\n    <input formControlName=\\\"un\\\" type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"username\\\" aria-describedby=\\\"usernmae\\\" placeholder=\\\"Enter your username\\\">\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"password\\\"> <strong>Password</strong></label>\\r\\n    <input formControlName=\\\"pw\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Enter your password\\\">\\r\\n  </div>\\r\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg btn-block\\\">Login</button>\\r\\n</form>\\r\\n\\r\\n<br>\\r\\n\\r\\n<a routerLink=\\\"/registration\\\">Create account</a>\\r\\n<br>\\r\\n<br>\\r\\n<br>\\r\\n<a routerLink=\\\"/patientlist\\\">Patient List</a>\\r\\n</div>\"","module.exports = \"<div class=\\\"container align-items-center col-sm-4\\\">\\r\\n    <h2>Registration</h2>\\r\\n    <br>\\r\\n        <input type=\\\"radio\\\" value=\\\"patient\\\" name=\\\"formType\\\" [(ngModel)]=\\\"selectedForm\\\" (change)=\\\"onFormTypeButtonClicked()\\\" checked>Patient&nbsp;\\r\\n        <input type=\\\"radio\\\" value=\\\"hospital\\\" name=\\\"formType\\\" [(ngModel)]=\\\"selectedForm\\\" (change)=\\\"onFormTypeButtonClicked()\\\">Hospital&nbsp;\\r\\n        <input type=\\\"radio\\\" value=\\\"buyer\\\" name=\\\"formType\\\" [(ngModel)]=\\\"selectedForm\\\" (change)=\\\"onFormTypeButtonClicked()\\\">Buyer\\r\\n    <br>\\r\\n    <br>\\r\\n    <form  \\r\\n          [formGroup]=\\\"form\\\"\\r\\n          (ngSubmit)=\\\"onSubmit(form.value)\\\"\\r\\n          method=\\\"post\\\">\\r\\n    \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"username\\\"><strong>Name</strong></label>\\r\\n        <input formControlName=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" >\\r\\n      </div>\\r\\n    \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"address\\\"> <strong>Address</strong></label>\\r\\n        <input formControlName=\\\"address\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"address\\\" >\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"email\\\"> <strong>Email</strong></label>\\r\\n        <input formControlName=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"contact\\\"> <strong>Contact No</strong></label>\\r\\n        <input formControlName=\\\"contact\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contact\\\" >\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\" *ngIf=\\\"selectedForm=='patient'\\\" >\\r\\n        <label for=\\\"dob\\\"> <strong>Date of Birth</strong></label>\\r\\n        <input formControlName=\\\"dob\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dob\\\" >\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\" *ngIf=\\\"selectedForm=='patient'\\\">\\r\\n        <label for=\\\"bloodtype\\\"> <strong>Blood Type</strong></label>\\r\\n        <select class=\\\"form-control\\\" id=\\\"bloodtype\\\" formControlName=\\\"bloodtype\\\">\\r\\n            <option *ngFor=\\\"let key of keys;index as i;\\\" [value]=\\\"key\\\" [label]=\\\"key\\\"></option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\" *ngIf=\\\"selectedForm=='patient'\\\">\\r\\n        <label> <strong>Gender</strong></label>\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <label class=\\\"radio-inline\\\">\\r\\n            <input type=\\\"radio\\\" value=male name=\\\"gender\\\" formControlName=\\\"gender\\\">\\r\\n            Male &nbsp;&nbsp;\\r\\n          </label>\\r\\n          <label class=\\\"radio-inline\\\">\\r\\n            <input type=\\\"radio\\\" value=female name=\\\"gender\\\" formControlName=\\\"gender\\\">\\r\\n            Female\\r\\n          </label>\\r\\n        </div>\\r\\n       \\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\" *ngIf=\\\"selectedForm=='buyer'||selectedForm=='hospital'\\\">\\r\\n        <label for=\\\"abn\\\"> <strong>ABN</strong></label>\\r\\n        <input formControlName=\\\"abn\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"abn\\\" >\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\" *ngIf=\\\"selectedForm=='buyer'||selectedForm=='hospital'\\\">\\r\\n        <label for=\\\"website\\\"> <strong>Website</strong></label>\\r\\n        <input formControlName=\\\"website\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"website\\\" >\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"username\\\"><strong>Username</strong></label>\\r\\n        <input formControlName=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" >\\r\\n      </div>\\r\\n    \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"password\\\"><strong>Password</strong></label>\\r\\n        <input formControlName=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" >\\r\\n      </div>\\r\\n    \\r\\n\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg btn-block\\\">Register</button>\\r\\n    </form>\\r\\n    \\r\\n    <br>\\r\\n    \\r\\n    <a routerLink=\\\"/login\\\">Login Page</a>\\r\\n    \\r\\n    </div>\\r\\n    <br>\\r\\n    <br>\"","import {RouterModule, Routes} from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { LoginComponent } from './user/login/login.component';\r\nimport { RegistrationComponent } from './user/registration/registration.component';\r\nimport { PatientDashboardComponent } from './patient/patient-dashboard/patient-dashboard.component';\r\n\r\nconst routes: Routes = [\r\n    {path: 'login', component: LoginComponent},\r\n    {path: 'registration', component: RegistrationComponent},\r\n    {path: 'patientlist', component: PatientDashboardComponent},\r\n    {path: '', pathMatch: 'full', redirectTo: 'login'}\r\n  \r\n  ];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n  })\r\n  export class AppRoutingModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'mycontext-frontend';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {UserModule} from './user/user.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { FormsModule} from '@angular/forms';\r\nimport { PatientModule } from './patient/patient.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    UserModule,\r\n    PatientModule,\r\n    AppRoutingModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"table {\\r\\n    border-collapse: collapse;\\r\\n  }\\r\\n  \\r\\n  table, th, td {\\r\\n    border: 1px solid black;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGF0aWVudC9wYXRpZW50LWRhc2hib2FyZC9wYXRpZW50LWRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0UsdUJBQXVCO0VBQ3pCIiwiZmlsZSI6InNyYy9hcHAvcGF0aWVudC9wYXRpZW50LWRhc2hib2FyZC9wYXRpZW50LWRhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICB9XHJcbiAgXHJcbiAgdGFibGUsIHRoLCB0ZCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxuICB9Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { IEmplployee, PatientsService } from '../patients.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-patient-dashboard',\r\n  templateUrl: './patient-dashboard.component.html',\r\n  styleUrls: ['./patient-dashboard.component.css']\r\n})\r\nexport class PatientDashboardComponent implements OnInit {\r\n\r\n  employees:IEmplployee[];\r\n\r\n  constructor(private patientService:PatientsService) { }\r\n\r\n  ngOnInit() {\r\n    this.patientService.getAllEmployees().subscribe((empData)=>this.employees=empData); \r\n      \r\n    \r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PatientDashboardComponent } from '../patient/patient-dashboard/patient-dashboard.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { PatientsService } from './patients.service';\r\n\r\n@NgModule({\r\n  declarations: [PatientDashboardComponent],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule\r\n  ],\r\n  providers:[PatientsService]\r\n    \r\n  }\r\n)\r\nexport class PatientModule { }\r\n","\r\nexport interface Patient{\r\n    user_id:string;\r\n    name:string;\r\n    dob:string;\r\n    blood_type: string;\r\n    address:string;\r\n    email:string;\r\n    contact_number:string;\r\n    gender:Gender;\r\n}\r\n\r\n\r\nexport enum Gender{\r\n    male=\"male\",female=\"female\"\r\n}\r\n\r\nexport enum Bloodtype{\r\n    Opos=\"O+\", Oneg=\"O-\", Apos=\"A+\", Aneg=\"A-\", Bpos=\"B+\",Bneg=\"B-\",ABpos=\"AB+\",ABneg=\"AB-\"\r\n}","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PatientsService {\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getAllEmployees():Observable<IEmplployee[]>{\r\n    return this._http.get<IEmplployee[]>(\"http://dummy.restapiexample.com/api/v1/employees\");\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface IEmplployee{\r\n  id:string;\r\n  employee_name:string;\r\n  employee_salary:string;\r\n  employee_age:string;\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder} from '@angular/forms';\r\nimport {UserService} from '../user.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  form;\r\n\r\n  constructor(private formBuilder:FormBuilder, private _userService:UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.form=this.formBuilder.group({\r\n      un: this.formBuilder.control(''),\r\n      pw: this.formBuilder.control('')\r\n\r\n  });\r\n  }\r\n\r\n  onSubmit(loginFormItem){\r\n    this._userService.doLogin(loginFormItem.un,loginFormItem.pw);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl } from '@angular/forms';\r\nimport { UserService } from '../user.service';\r\nimport { User_Type } from '../user';\r\nimport {Gender, Bloodtype} from '../../patient/patient';\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  allBloodType=Bloodtype;\r\n  keys=[];\r\n  \r\n  selectedForm=\"patient\";\r\n\r\n  form;\r\n\r\n  constructor(private formBuilder: FormBuilder, private _userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.keys=Object.values(this.allBloodType);    \r\n    \r\n    this.form=this.formBuilder.group({\r\n      name: this.formBuilder.control(''),\r\n      usertype:this.formBuilder.control(User_Type.patient),\r\n      username: this.formBuilder.control(''),\r\n      password: this.formBuilder.control(''),\r\n      contact: this.formBuilder.control(''),\r\n      email: this.formBuilder.control(''),\r\n      address: this.formBuilder.control(''),\r\n      dob: this.formBuilder.control(''),\r\n      gender: this.formBuilder.control(Gender.male),\r\n      bloodtype: this.formBuilder.control(Bloodtype.Opos)\r\n\r\n  });\r\n  }\r\n\r\n  onFormTypeButtonClicked(){\r\n    console.log(this.selectedForm);\r\n    if(this.selectedForm==\"patient\"){\r\n      this.form.addControl(\"dob\", new FormControl(\"\"));\r\n      this.form.addControl(\"gender\", new FormControl(Gender.male));\r\n      this.form.addControl(\"bloodtype\", new FormControl(Bloodtype.Opos));\r\n      this.form.removeControl(\"website\");\r\n      this.form.removeControl(\"abn\");\r\n      this.form.controls['usertype'].setValue(User_Type.patient);\r\n    }\r\n    else if(this.selectedForm==\"hospital\"){\r\n      this.form.addControl(\"abn\", new FormControl(\"\"));\r\n      this.form.addControl(\"website\", new FormControl(\"\"));\r\n      this.form.removeControl(\"dob\");\r\n      this.form.removeControl(\"gender\");\r\n      this.form.removeControl(\"bloodtype\");\r\n      this.form.controls['usertype'].setValue(User_Type.hospital);\r\n    }\r\n    else if(this.selectedForm==\"buyer\"){\r\n      this.form.addControl(\"abn\", new FormControl(\"\"));\r\n      this.form.addControl(\"website\", new FormControl(\"\"));\r\n      this.form.removeControl(\"dob\");\r\n      this.form.removeControl(\"gender\");\r\n      this.form.removeControl(\"bloodtype\");\r\n      this.form.controls['usertype'].setValue(User_Type.buyer);\r\n    }\r\n  }\r\n\r\n  onSubmit(formItem){\r\n    this._userService.doRegistration(formItem);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RegistrationComponent } from '../user/registration/registration.component';\r\nimport { LoginComponent } from '../user/login/login.component';\r\nimport { ReactiveFormsModule, FormsModule} from '@angular/forms';\r\nimport { UserService} from '../user/user.service';\r\nimport {RouterModule} from '@angular/router';\r\n@NgModule({\r\n  declarations: [RegistrationComponent, LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    FormsModule\r\n  ],\r\n  providers:[UserService]\r\n})\r\nexport class UserModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { User, User_Type } from './user';\r\nimport { Patient, Gender } from '../patient/patient';\r\nimport { Hospital } from '../hospital/hospital';\r\nimport { Buyer } from '../buyer/buyer';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService{\r\n  private users:User[]=[\r\n    {user_id:\"p1000\",user_type:User_Type.patient,username:\"parag\",password:\"parag123\"},\r\n    {user_id:\"p1001\",user_type:User_Type.patient,username:\"sukhi\",password:\"sukhi123\"},\r\n    {user_id:\"h2000\",user_type:User_Type.hospital,username:\"namrata\",password:\"namrata123\"},\r\n    {user_id:\"h2001\",user_type:User_Type.hospital,username:\"sanka\",password:\"sanka123\"},\r\n    {user_id:\"b3000\",user_type:User_Type.buyer,username:\"vamsi\",password:\"vamsi123\"},\r\n    {user_id:\"b3001\",user_type:User_Type.buyer,username:\"musa\",password:\"musa123\"}\r\n  ];;\r\n  private patients:Patient[]=[{user_id:\"p1000\",name:\"Parag Shrestha\",dob:\"11/11/1990\",blood_type:\"A+\",\r\n  contact_number:\"0445566778\",email:\"abc@goas.com\",gender:Gender.male,address:\"Main St, Blackburn\"}];\r\n  private hospitals:Hospital[]=[{user_id:\"h2000\",name:\"ABC Hospital\",contact_number:\"102456214\",abn:112234,\r\n  address:\"high st, boxhill\",website:\"www.abchospital.com.au\",email:\"hospita@abc.com\"}];\r\n  private buyers: Buyer[]=[{user_id:\"b3000\",name:\"XYZ Research Facility\",contact_number:\"998877450\",abn:122558,\r\n  address:\"bourke st, flinders\",website:\"www.researchfacility.com.au\",email:\"facility@research.com\"}];\r\n  \r\n  constructor(){}\r\n\r\n  doLogin(un:string, pw:string):string{\r\n    if(this.users.filter(e=>e.username==un).length>0){\r\n\r\n      if(this.users.filter(e=>e.username==un&&e.password==pw).length>0){\r\n        console.log(\"login successful\");\r\n      }\r\n      else{\r\n        console.log(\"incorrect password\");\r\n      }\r\n    }\r\n    else{\r\n      console.log(\"username not found\");\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  doRegistration(formItem){\r\n    \r\n    if(formItem.usertype==\"patient\"){\r\n        \r\n        let newUser:User={user_id:\"p1234\",user_type:formItem.usertype,username:formItem.username,password:formItem.password};\r\n        this.users.push(newUser);\r\n\r\n        this.patients.push({user_id:\"p1234\",\r\n        name:formItem.name,\r\n        dob:formItem.dob,\r\n        blood_type:formItem.bloodtype,\r\n        contact_number:formItem.contact,\r\n        address:formItem.address,\r\n        email:formItem.email,\r\n        gender:formItem.gender});\r\n    }\r\n    else if(formItem.usertype==\"hospital\"){\r\n        \r\n        let newUser:User={user_id:\"h1234\",user_type:formItem.usertype,username:formItem.username,password:formItem.password};\r\n        this.users.push(newUser);\r\n\r\n\r\n      this.hospitals.push({user_id:\"h1234\",\r\n      name:formItem.name,\r\n      contact_number:formItem.contact,\r\n      address:formItem.address,\r\n      email:formItem.email,\r\n      website:formItem.website,\r\n      abn:formItem.abn\r\n      });\r\n    }\r\n    else if(formItem.usertype==\"buyer\"){\r\n      let newUser:User={user_id:\"b1234\",user_type:formItem.usertype,username:formItem.username,password:formItem.password};\r\n      this.users.push(newUser);\r\n\r\n\r\n      this.buyers.push({user_id:\"b1234\",\r\n      name:formItem.name,\r\n      contact_number:formItem.contact,\r\n      address:formItem.address,\r\n      email:formItem.email,\r\n      website:formItem.website,\r\n      abn:formItem.abn\r\n      });\r\n    }\r\n\r\n    console.log(this.users);\r\n    console.log(this.patients);\r\n    console.log(this.hospitals);\r\n    console.log(this.buyers);\r\n    \r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","export interface User {\r\n    user_id:string;\r\n    user_type:User_Type;\r\n    username:string;\r\n    password:string;\r\n}\r\n\r\nexport enum User_Type{\r\n    patient=\"patient\",\r\n    hospital=\"hospital\",\r\n    buyer=\"buyer\"\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}